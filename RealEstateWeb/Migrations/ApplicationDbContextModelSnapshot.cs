// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealEstateWeb.Data;

#nullable disable

namespace RealEstateWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApartmentItem", b =>
                {
                    b.Property<long>("ApartmentsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ItemsId")
                        .HasColumnType("bigint");

                    b.HasKey("ApartmentsId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("ApartmentItem");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BuildingId")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StreetNum")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Apartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Area")
                        .HasColumnType("integer");

                    b.Property<long>("BuildingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<string>("Heating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumOfRooms")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Building", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cctv")
                        .HasColumnType("boolean");

                    b.Property<bool>("Elevator")
                        .HasColumnType("boolean");

                    b.Property<bool>("Garage")
                        .HasColumnType("boolean");

                    b.Property<bool>("Intercom")
                        .HasColumnType("boolean");

                    b.Property<int>("NumOfFloors")
                        .HasColumnType("integer");

                    b.Property<bool>("Parking")
                        .HasColumnType("boolean");

                    b.Property<int>("YearConstrcuted")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Ležaj"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Plakar"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Klima"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Telefon"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "TV"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Internet"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Kuhinjski elementi"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Mikrotalasna"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Šporet"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "Rerna"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "Rešo"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "Frižider"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "Zamrzivač"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "Sudomašina"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "Veš mašina"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "Kancelarijski nameštaj"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "Terasa"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "Ležaj"
                        });
                });

            modelBuilder.Entity("RealEstateWeb.Models.Listing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ApartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TermsId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("TermsId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Terms", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("DateAvailable")
                        .HasColumnType("date");

                    b.Property<bool>("Deposit")
                        .HasColumnType("boolean");

                    b.Property<bool>("ForStudents")
                        .HasColumnType("boolean");

                    b.Property<bool>("ForWorkers")
                        .HasColumnType("boolean");

                    b.Property<bool>("PetsAllowed")
                        .HasColumnType("boolean");

                    b.Property<bool>("SmokingAllowed")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("ApartmentItem", b =>
                {
                    b.HasOne("RealEstateWeb.Models.Apartment", null)
                        .WithMany()
                        .HasForeignKey("ApartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWeb.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWeb.Models.Address", b =>
                {
                    b.HasOne("RealEstateWeb.Models.Building", "Building")
                        .WithOne("Address")
                        .HasForeignKey("RealEstateWeb.Models.Address", "BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Apartment", b =>
                {
                    b.HasOne("RealEstateWeb.Models.Building", "Building")
                        .WithMany("Apartments")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Listing", b =>
                {
                    b.HasOne("RealEstateWeb.Models.Apartment", "Apartment")
                        .WithMany("Listings")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWeb.Models.Terms", "Terms")
                        .WithMany("Listings")
                        .HasForeignKey("TermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Terms");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Apartment", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Building", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("RealEstateWeb.Models.Terms", b =>
                {
                    b.Navigation("Listings");
                });
#pragma warning restore 612, 618
        }
    }
}
